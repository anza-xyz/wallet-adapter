{"version":3,"file":"solana-wallet-adapter-angular-material-ui.js","sources":["../../src/shared/pipes/sanitize-url.pipe.ts","../../src/shared/components/icon.component.ts","../../src/connect-button/connect-button.directive.ts","../../src/connect-button/connect-button.component.ts","../../src/modal/list-item.component.ts","../../src/modal/expand.component.ts","../../src/modal/modal.component.ts","../../src/modal/modal-button.directive.ts","../../src/modal/modal-button.component.ts","../../src/disconnect-button/disconnect-button.directive.ts","../../src/disconnect-button/disconnect-button.component.ts","../../src/shared/pipes/obscure-address.pipe.ts","../../src/multi-button/multi-button.component.ts","../../src/shared/operators/is-not-null.operator.ts","../../src/angular-material-ui.module.ts","../../src/solana-wallet-adapter-angular-material-ui.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'sanitizeUrl',\n    pure: true,\n})\nexport class SanitizeUrlPipe implements PipeTransform {\n    constructor(private readonly _domSanitizer: DomSanitizer) {}\n\n    transform(value: string): SafeResourceUrl {\n        return this._domSanitizer.bypassSecurityTrustResourceUrl(value);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { Wallet } from '@solana/wallet-adapter-wallets';\n\n@Component({\n    selector: 'wallet-icon',\n    template: `\n        <ng-container *ngIf=\"wallet\">\n            <img [src]=\"wallet.icon | sanitizeUrl\" alt=\"\" />\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                width: 1.5rem;\n                height: 1.5rem;\n            }\n\n            img {\n                width: inherit;\n                height: inherit;\n            }\n        `,\n    ],\n})\nexport class WalletIconComponent {\n    @Input() wallet: Wallet | null = null;\n}\n","import { Directive, HostListener } from '@angular/core';\nimport { WalletStore } from '@solana/wallet-adapter-angular';\n\n@Directive({ selector: 'button[wallet-connect-button]' })\nexport class WalletConnectButtonDirective {\n    @HostListener('click') onClick(): void {\n        this._walletStore.connect().subscribe();\n    }\n\n    constructor(private readonly _walletStore: WalletStore) {}\n}\n","import { ChangeDetectionStrategy, Component, ContentChild, ElementRef, Input } from '@angular/core';\nimport { WalletStore } from '@solana/wallet-adapter-angular';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ButtonColor } from '../shared/types';\n\n@Component({\n    selector: 'wallet-connect-button',\n    template: `\n        <button\n            *ngrxLet=\"wallet$; let wallet\"\n            mat-raised-button\n            wallet-connect-button\n            [color]=\"color\"\n            [disabled]=\"disabled || (connecting$ | ngrxPush) || !wallet || (connected$ | ngrxPush)\"\n        >\n            <ng-content></ng-content>\n            <div class=\"button-content\" *ngIf=\"!children\">\n                <wallet-icon *ngIf=\"wallet\" [wallet]=\"wallet\"></wallet-icon>\n                {{ innerText$ | ngrxPush }}\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            button {\n                display: inline-block;\n            }\n\n            .button-content {\n                display: flex;\n                gap: 0.5rem;\n                align-items: center;\n            }\n        `,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WalletConnectButtonComponent {\n    @ContentChild('children') children: ElementRef | null = null;\n    @Input() color: ButtonColor = 'primary';\n    @Input() disabled = false;\n    readonly wallet$ = this._walletStore.wallet$;\n    readonly connecting$ = this._walletStore.connecting$;\n    readonly connected$ = this._walletStore.connected$;\n    readonly innerText$ = combineLatest([this.connecting$, this.connected$, this.wallet$]).pipe(\n        map(([connecting, connected, wallet]) => {\n            if (connecting) return 'Connecting...';\n            if (connected) return 'Connected';\n            if (wallet) return 'Connect';\n            return 'Connect Wallet';\n        })\n    );\n\n    constructor(private readonly _walletStore: WalletStore) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { Wallet } from '@solana/wallet-adapter-wallets';\n\n@Component({\n    selector: 'wallet-list-item',\n    template: `\n        <ng-container *ngIf=\"wallet\">\n            <p>{{ wallet.name }}</p>\n\n            <wallet-icon [wallet]=\"wallet\"></wallet-icon>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n            }\n\n            p {\n                margin: 0;\n            }\n        `,\n    ],\n})\nexport class WalletListItemComponent {\n    @Input() wallet: Wallet | null = null;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'wallet-expand',\n    template: `\n        <p>{{ expanded ? 'Less' : 'More' }} options</p>\n        <mat-icon> {{ expanded ? 'expand_less' : 'expand_more' }}</mat-icon>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n            }\n\n            p {\n                margin: 0;\n            }\n        `,\n    ],\n})\nexport class WalletExpandComponent {\n    @Input() expanded: boolean | null = null;\n}\n","import { ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSelectionList, MatSelectionListChange } from '@angular/material/list';\nimport { WalletStore } from '@solana/wallet-adapter-angular';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'wallet-modal',\n    template: `\n        <mat-toolbar color=\"primary\">\n            <h2 mat-dialog-title>Select Wallet</h2>\n            <button mat-icon-button mat-dialog-close aria-label=\"Close wallet adapter selection\">\n                <mat-icon>close</mat-icon>\n            </button>\n        </mat-toolbar>\n        <ng-container *ngrxLet=\"more$; let moreWallets\">\n            <ng-container *ngrxLet=\"expanded$; let expanded\">\n                <mat-selection-list [multiple]=\"false\" (selectionChange)=\"onSelectionChange($event)\">\n                    <mat-list-option\n                        *ngFor=\"let wallet of featured$ | ngrxPush; last as isLast\"\n                        [value]=\"wallet.name\"\n                        [ngClass]=\"{\n                            'bottom-separator': moreWallets.length > 0 || !isLast\n                        }\"\n                    >\n                        <wallet-list-item [wallet]=\"wallet\"> </wallet-list-item>\n                    </mat-list-option>\n                    <ng-container *ngIf=\"moreWallets.length > 0\">\n                        <ng-container *ngIf=\"expanded\">\n                            <mat-list-option\n                                *ngFor=\"let wallet of moreWallets; last as isLast\"\n                                [value]=\"wallet.name\"\n                                class=\"bottom-separator\"\n                            >\n                                <wallet-list-item [wallet]=\"wallet\"> </wallet-list-item>\n                            </mat-list-option>\n                        </ng-container>\n                        <mat-list-option [value]=\"null\">\n                            <wallet-expand [expanded]=\"expanded\"> </wallet-expand>\n                        </mat-list-option>\n                    </ng-container>\n                </mat-selection-list>\n            </ng-container>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                min-width: 280px;\n            }\n\n            .mat-dialog-title {\n                margin: 0;\n            }\n\n            .mat-toolbar {\n                justify-content: space-between;\n            }\n\n            .mat-list-base {\n                padding: 0 !important;\n            }\n\n            .bottom-separator {\n                border-bottom: solid 1px rgb(255 255 255 / 10%);\n            }\n        `,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WalletModalComponent {\n    @ViewChild(MatSelectionList) matSelectionList: MatSelectionList | null = null;\n    private readonly _expanded = new BehaviorSubject(false);\n    readonly expanded$ = this._expanded.asObservable();\n    private readonly _featuredWallets = new BehaviorSubject(3);\n    readonly featuredWallets$ = this._featuredWallets.asObservable();\n    readonly wallets$ = this._walletStore.wallets$;\n    readonly featured$ = combineLatest([this._walletStore.wallets$, this.featuredWallets$]).pipe(\n        map(([wallets, featuredWallets]) => wallets.slice(0, featuredWallets))\n    );\n    readonly more$ = combineLatest([this._walletStore.wallets$, this.featuredWallets$]).pipe(\n        map(([wallets, featuredWallets]) => wallets.slice(featuredWallets))\n    );\n\n    constructor(\n        private readonly _walletStore: WalletStore,\n        private readonly _matDialogRef: MatDialogRef<WalletModalComponent>\n    ) {}\n\n    onSelectionChange({ options }: MatSelectionListChange): void {\n        const [option] = options;\n\n        if (option.value === null) {\n            this.matSelectionList?.deselectAll();\n            this._expanded.next(!this._expanded.getValue());\n        } else {\n            this._walletStore.selectWallet(option.value || null);\n            this._matDialogRef.close();\n        }\n    }\n}\n","import { Directive, HostListener } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { WalletModalComponent } from './modal.component';\n\n@Directive({ selector: 'button[wallet-modal-button]' })\nexport class WalletModalButtonDirective {\n    @HostListener('click') onClick(): void {\n        this._matDialog.open(WalletModalComponent, { panelClass: 'wallet-modal' });\n    }\n\n    constructor(private readonly _matDialog: MatDialog) {}\n}\n","import { ChangeDetectionStrategy, Component, ContentChild, ElementRef, Input } from '@angular/core';\n\nimport { ButtonColor } from '../shared/types';\n\n@Component({\n    selector: 'wallet-modal-button',\n    template: `\n        <button mat-raised-button [color]=\"color\" wallet-modal-button>\n            <ng-content></ng-content>\n            <ng-container *ngIf=\"!children\">Select Wallet</ng-container>\n        </button>\n    `,\n    styles: [\n        `\n            button {\n                display: inline-block;\n            }\n\n            .button-content {\n                display: flex;\n                gap: 0.5rem;\n                align-items: center;\n            }\n        `,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WalletModalButtonComponent {\n    @ContentChild('children') children: ElementRef | null = null;\n    @Input() color: ButtonColor = 'primary';\n}\n","import { Directive, HostListener } from '@angular/core';\nimport { WalletStore } from '@solana/wallet-adapter-angular';\n\n@Directive({ selector: 'button[wallet-disconnect-button]' })\nexport class WalletDisconnectButtonDirective {\n    @HostListener('click') onClick(): void {\n        this._walletStore.disconnect().subscribe();\n    }\n\n    constructor(private readonly _walletStore: WalletStore) {}\n}\n","import { Component, ContentChild, ElementRef, Input } from '@angular/core';\nimport { WalletStore } from '@solana/wallet-adapter-angular';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ButtonColor } from '../shared/types';\n\n@Component({\n    selector: 'wallet-disconnect-button',\n    template: `\n        <button\n            mat-raised-button\n            wallet-disconnect-button\n            [color]=\"color\"\n            [disabled]=\"disabled || (disconnecting$ | ngrxPush) || (wallet$ | ngrxPush) === null\"\n        >\n            <ng-content></ng-content>\n            <div class=\"button-content\" *ngIf=\"!children\">\n                <mat-icon>logout</mat-icon>\n                {{ innerText$ | ngrxPush }}\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .button-content {\n                display: flex;\n                gap: 0.5rem;\n                align-items: center;\n            }\n        `,\n    ],\n})\nexport class WalletDisconnectButtonComponent {\n    @ContentChild('children') children: ElementRef | null = null;\n    @Input() color: ButtonColor = 'primary';\n    @Input() disabled = false;\n    readonly innerText$ = combineLatest([this._walletStore.disconnecting$, this._walletStore.wallet$]).pipe(\n        map(([disconnecting, wallet]) => {\n            if (disconnecting) return 'Disconnecting ...';\n            if (wallet) return 'Disconnect';\n            return 'Disconnect Wallet';\n        })\n    );\n    readonly wallet$ = this._walletStore.wallet$;\n    readonly disconnecting$ = this._walletStore.disconnecting$;\n\n    constructor(private readonly _walletStore: WalletStore) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'obscureAddress',\n})\nexport class ObscureAddressPipe implements PipeTransform {\n    transform(value: string | null): string {\n        if (value === null) {\n            return '';\n        }\n\n        return value\n            .split('')\n            .reduce((state: string, curr: string, index: number) => state + (index <= 3 || index >= 39 ? curr : '*'))\n            .split('*')\n            .filter((segment) => segment)\n            .join('***');\n    }\n}\n","import { ChangeDetectionStrategy, Component, ContentChild, ElementRef, Input } from '@angular/core';\nimport { WalletStore } from '@solana/wallet-adapter-angular';\nimport { map } from 'rxjs/operators';\n\nimport { ButtonColor } from '../shared/types';\n\n@Component({\n    selector: 'wallet-multi-button',\n    template: `\n        <wallet-modal-button *ngIf=\"(wallet$ | ngrxPush) === null\" [color]=\"color\"></wallet-modal-button>\n        <wallet-connect-button\n            *ngIf=\"(connected$ | ngrxPush) === false && (wallet$ | ngrxPush)\"\n            [color]=\"color\"\n        ></wallet-connect-button>\n\n        <ng-container *ngIf=\"connected$ | ngrxPush\">\n            <button mat-raised-button [color]=\"color\" [matMenuTriggerFor]=\"walletMenu\">\n                <ng-content></ng-content>\n                <div class=\"button-content\" *ngIf=\"!children\">\n                    <wallet-icon [wallet]=\"wallet$ | ngrxPush\"></wallet-icon>\n                    {{ address$ | ngrxPush | obscureAddress }}\n                </div>\n            </button>\n            <mat-menu #walletMenu=\"matMenu\">\n                <button *ngIf=\"address$ | ngrxPush as address\" mat-menu-item [cdkCopyToClipboard]=\"address\">\n                    <mat-icon>content_copy</mat-icon>\n                    Copy address\n                </button>\n                <button mat-menu-item wallet-modal-button>\n                    <mat-icon>sync_alt</mat-icon>\n                    Connect a different wallet\n                </button>\n                <mat-divider></mat-divider>\n                <button mat-menu-item wallet-disconnect-button>\n                    <mat-icon>logout</mat-icon>\n                    Disconnect\n                </button>\n            </mat-menu>\n        </ng-container>\n    `,\n    styles: [\n        `\n            .button-content {\n                display: flex;\n                gap: 0.5rem;\n                align-items: center;\n            }\n        `,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WalletMultiButtonComponent {\n    @ContentChild('children') children: ElementRef | null = null;\n    @Input() color: ButtonColor = 'primary';\n    readonly wallet$ = this._walletStore.wallet$;\n    readonly connected$ = this._walletStore.connected$;\n    readonly address$ = this._walletStore.publicKey$.pipe(map((publicKey) => publicKey && publicKey.toBase58()));\n\n    constructor(private readonly _walletStore: WalletStore) {}\n}\n","import { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nexport const isNotNull = <T>(source: Observable<T | null>): Observable<T> =>\n    source.pipe(filter((value): value is T => value !== null));\n","import { ClipboardModule } from '@angular/cdk/clipboard';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { ReactiveComponentModule } from '@ngrx/component';\n\nimport { WalletConnectButtonComponent, WalletConnectButtonDirective } from './connect-button';\nimport {\n    WalletModalButtonComponent,\n    WalletModalButtonDirective,\n    WalletModalComponent,\n    WalletExpandComponent,\n    WalletListItemComponent,\n} from './modal';\nimport { WalletDisconnectButtonComponent, WalletDisconnectButtonDirective } from './disconnect-button';\nimport { WalletMultiButtonComponent } from './multi-button';\nimport { ObscureAddressPipe, SanitizeUrlPipe, WalletIconComponent } from './shared';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ClipboardModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatIconModule,\n        MatListModule,\n        MatMenuModule,\n        MatToolbarModule,\n        ReactiveComponentModule,\n    ],\n    exports: [\n        WalletConnectButtonComponent,\n        WalletConnectButtonDirective,\n        WalletDisconnectButtonComponent,\n        WalletDisconnectButtonDirective,\n        WalletMultiButtonComponent,\n        WalletModalButtonComponent,\n        WalletModalButtonDirective,\n        WalletModalComponent,\n        WalletIconComponent,\n    ],\n    declarations: [\n        WalletConnectButtonComponent,\n        WalletConnectButtonDirective,\n        WalletDisconnectButtonComponent,\n        WalletDisconnectButtonDirective,\n        WalletMultiButtonComponent,\n        WalletModalButtonComponent,\n        WalletModalButtonDirective,\n        WalletModalComponent,\n        WalletListItemComponent,\n        WalletExpandComponent,\n        WalletIconComponent,\n        SanitizeUrlPipe,\n        ObscureAddressPipe,\n    ],\n})\nexport class WalletUiModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}